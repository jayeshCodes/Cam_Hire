{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport RawAsyncValidator from 'async-validator';\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { defaultValidateMessages } from './messages';\nimport { setValues } from './valueUtil'; // Remove incorrect original ts define\n\nvar AsyncValidator = RawAsyncValidator;\n/**\r\n * Replace with template.\r\n *   `I'm ${name}` + { name: 'bamboo' } = I'm bamboo\r\n */\n\nfunction replaceMessage(template, kv) {\n  return template.replace(/\\$\\{\\w+\\}/g, function (str) {\n    var key = str.slice(2, -1);\n    return kv[key];\n  });\n}\n\nvar CODE_LOGIC_ERROR = 'CODE_LOGIC_ERROR';\n\nfunction validateRule(_x, _x2, _x3, _x4, _x5) {\n  return _validateRule.apply(this, arguments);\n}\n/**\r\n * We use `async-validator` to validate the value.\r\n * But only check one value in a time to avoid namePath validate issue.\r\n */\n\n\nfunction _validateRule() {\n  _validateRule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name, value, rule, options, messageVariables) {\n    var cloneRule, originValidator, subRuleField, validator, messages, result, subResults, kv, fillVariableResult;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            cloneRule = _objectSpread({}, rule); // Bug of `async-validator`\n            // https://github.com/react-component/field-form/issues/316\n            // https://github.com/react-component/field-form/issues/313\n\n            delete cloneRule.ruleIndex;\n\n            if (cloneRule.validator) {\n              originValidator = cloneRule.validator;\n\n              cloneRule.validator = function () {\n                try {\n                  return originValidator.apply(void 0, arguments);\n                } catch (error) {\n                  console.error(error);\n                  return Promise.reject(CODE_LOGIC_ERROR);\n                }\n              };\n            } // We should special handle array validate\n\n\n            subRuleField = null;\n\n            if (cloneRule && cloneRule.type === 'array' && cloneRule.defaultField) {\n              subRuleField = cloneRule.defaultField;\n              delete cloneRule.defaultField;\n            }\n\n            validator = new AsyncValidator(_defineProperty({}, name, [cloneRule]));\n            messages = setValues({}, defaultValidateMessages, options.validateMessages);\n            validator.messages(messages);\n            result = [];\n            _context2.prev = 9;\n            _context2.next = 12;\n            return Promise.resolve(validator.validate(_defineProperty({}, name, value), _objectSpread({}, options)));\n\n          case 12:\n            _context2.next = 17;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](9);\n\n            if (_context2.t0.errors) {\n              result = _context2.t0.errors.map(function (_ref4, index) {\n                var message = _ref4.message;\n                var mergedMessage = message === CODE_LOGIC_ERROR ? messages.default : message;\n                return /*#__PURE__*/React.isValidElement(mergedMessage) ?\n                /*#__PURE__*/\n                // Wrap ReactNode with `key`\n                React.cloneElement(mergedMessage, {\n                  key: \"error_\".concat(index)\n                }) : mergedMessage;\n              });\n            }\n\n          case 17:\n            if (!(!result.length && subRuleField)) {\n              _context2.next = 22;\n              break;\n            }\n\n            _context2.next = 20;\n            return Promise.all(value.map(function (subValue, i) {\n              return validateRule(\"\".concat(name, \".\").concat(i), subValue, subRuleField, options, messageVariables);\n            }));\n\n          case 20:\n            subResults = _context2.sent;\n            return _context2.abrupt(\"return\", subResults.reduce(function (prev, errors) {\n              return [].concat(_toConsumableArray(prev), _toConsumableArray(errors));\n            }, []));\n\n          case 22:\n            // Replace message with variables\n            kv = _objectSpread(_objectSpread({}, rule), {}, {\n              name: name,\n              enum: (rule.enum || []).join(', ')\n            }, messageVariables);\n            fillVariableResult = result.map(function (error) {\n              if (typeof error === 'string') {\n                return replaceMessage(error, kv);\n              }\n\n              return error;\n            });\n            return _context2.abrupt(\"return\", fillVariableResult);\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[9, 14]]);\n  }));\n  return _validateRule.apply(this, arguments);\n}\n\nexport function validateRules(namePath, value, rules, options, validateFirst, messageVariables) {\n  var name = namePath.join('.'); // Fill rule with context\n\n  var filledRules = rules.map(function (currentRule, ruleIndex) {\n    var originValidatorFunc = currentRule.validator;\n\n    var cloneRule = _objectSpread(_objectSpread({}, currentRule), {}, {\n      ruleIndex: ruleIndex\n    }); // Replace validator if needed\n\n\n    if (originValidatorFunc) {\n      cloneRule.validator = function (rule, val, callback) {\n        var hasPromise = false; // Wrap callback only accept when promise not provided\n\n        var wrappedCallback = function wrappedCallback() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          } // Wait a tick to make sure return type is a promise\n\n\n          Promise.resolve().then(function () {\n            warning(!hasPromise, 'Your validator function has already return a promise. `callback` will be ignored.');\n\n            if (!hasPromise) {\n              callback.apply(void 0, args);\n            }\n          });\n        }; // Get promise\n\n\n        var promise = originValidatorFunc(rule, val, wrappedCallback);\n        hasPromise = promise && typeof promise.then === 'function' && typeof promise.catch === 'function';\n        /**\r\n         * 1. Use promise as the first priority.\r\n         * 2. If promise not exist, use callback with warning instead\r\n         */\n\n        warning(hasPromise, '`callback` is deprecated. Please return a promise instead.');\n\n        if (hasPromise) {\n          promise.then(function () {\n            callback();\n          }).catch(function (err) {\n            callback(err || ' ');\n          });\n        }\n      };\n    }\n\n    return cloneRule;\n  }).sort(function (_ref, _ref2) {\n    var w1 = _ref.warningOnly,\n        i1 = _ref.ruleIndex;\n    var w2 = _ref2.warningOnly,\n        i2 = _ref2.ruleIndex;\n\n    if (!!w1 === !!w2) {\n      // Let keep origin order\n      return i1 - i2;\n    }\n\n    if (w1) {\n      return 1;\n    }\n\n    return -1;\n  }); // Do validate rules\n\n  var summaryPromise;\n\n  if (validateFirst === true) {\n    // >>>>> Validate by serialization\n    summaryPromise = new Promise( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve, reject) {\n        var i, rule, errors;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < filledRules.length)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                rule = filledRules[i];\n                _context.next = 5;\n                return validateRule(name, value, rule, options, messageVariables);\n\n              case 5:\n                errors = _context.sent;\n\n                if (!errors.length) {\n                  _context.next = 9;\n                  break;\n                }\n\n                reject([{\n                  errors: errors,\n                  rule: rule\n                }]);\n                return _context.abrupt(\"return\");\n\n              case 9:\n                i += 1;\n                _context.next = 1;\n                break;\n\n              case 12:\n                /* eslint-enable */\n                resolve([]);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x6, _x7) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  } else {\n    // >>>>> Validate by parallel\n    var rulePromises = filledRules.map(function (rule) {\n      return validateRule(name, value, rule, options, messageVariables).then(function (errors) {\n        return {\n          errors: errors,\n          rule: rule\n        };\n      });\n    });\n    summaryPromise = (validateFirst ? finishOnFirstFailed(rulePromises) : finishOnAllFailed(rulePromises)).then(function (errors) {\n      // Always change to rejection for Field to catch\n      return Promise.reject(errors);\n    });\n  } // Internal catch error to avoid console error log.\n\n\n  summaryPromise.catch(function (e) {\n    return e;\n  });\n  return summaryPromise;\n}\n\nfunction finishOnAllFailed(_x8) {\n  return _finishOnAllFailed.apply(this, arguments);\n}\n\nfunction _finishOnAllFailed() {\n  _finishOnAllFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(rulePromises) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", Promise.all(rulePromises).then(function (errorsList) {\n              var _ref5;\n\n              var errors = (_ref5 = []).concat.apply(_ref5, _toConsumableArray(errorsList));\n\n              return errors;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _finishOnAllFailed.apply(this, arguments);\n}\n\nfunction finishOnFirstFailed(_x9) {\n  return _finishOnFirstFailed.apply(this, arguments);\n}\n\nfunction _finishOnFirstFailed() {\n  _finishOnFirstFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(rulePromises) {\n    var count;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            count = 0;\n            return _context4.abrupt(\"return\", new Promise(function (resolve) {\n              rulePromises.forEach(function (promise) {\n                promise.then(function (ruleError) {\n                  if (ruleError.errors.length) {\n                    resolve([ruleError]);\n                  }\n\n                  count += 1;\n\n                  if (count === rulePromises.length) {\n                    resolve([]);\n                  }\n                });\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _finishOnFirstFailed.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/CamHire2/Cam_Hire/node_modules/rc-field-form/es/utils/validateUtil.js"],"names":["_toConsumableArray","_defineProperty","_regeneratorRuntime","_objectSpread","_asyncToGenerator","RawAsyncValidator","React","warning","defaultValidateMessages","setValues","AsyncValidator","replaceMessage","template","kv","replace","str","key","slice","CODE_LOGIC_ERROR","validateRule","_x","_x2","_x3","_x4","_x5","_validateRule","apply","arguments","mark","_callee2","name","value","rule","options","messageVariables","cloneRule","originValidator","subRuleField","validator","messages","result","subResults","fillVariableResult","wrap","_callee2$","_context2","prev","next","ruleIndex","error","console","Promise","reject","type","defaultField","validateMessages","resolve","validate","t0","errors","map","_ref4","index","message","mergedMessage","default","isValidElement","cloneElement","concat","length","all","subValue","i","sent","abrupt","reduce","enum","join","stop","validateRules","namePath","rules","validateFirst","filledRules","currentRule","originValidatorFunc","val","callback","hasPromise","wrappedCallback","_len","args","Array","_key","then","promise","catch","err","sort","_ref","_ref2","w1","warningOnly","i1","w2","i2","summaryPromise","_ref3","_callee","_callee$","_context","_x6","_x7","rulePromises","finishOnFirstFailed","finishOnAllFailed","e","_x8","_finishOnAllFailed","_callee3","_callee3$","_context3","errorsList","_ref5","_x9","_finishOnFirstFailed","_callee4","count","_callee4$","_context4","forEach","ruleError"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\r\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\r\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\r\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\r\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\r\nimport RawAsyncValidator from 'async-validator';\r\nimport * as React from 'react';\r\nimport warning from \"rc-util/es/warning\";\r\nimport { defaultValidateMessages } from './messages';\r\nimport { setValues } from './valueUtil'; // Remove incorrect original ts define\r\n\r\nvar AsyncValidator = RawAsyncValidator;\r\n/**\r\n * Replace with template.\r\n *   `I'm ${name}` + { name: 'bamboo' } = I'm bamboo\r\n */\r\n\r\nfunction replaceMessage(template, kv) {\r\n  return template.replace(/\\$\\{\\w+\\}/g, function (str) {\r\n    var key = str.slice(2, -1);\r\n    return kv[key];\r\n  });\r\n}\r\n\r\nvar CODE_LOGIC_ERROR = 'CODE_LOGIC_ERROR';\r\n\r\nfunction validateRule(_x, _x2, _x3, _x4, _x5) {\r\n  return _validateRule.apply(this, arguments);\r\n}\r\n/**\r\n * We use `async-validator` to validate the value.\r\n * But only check one value in a time to avoid namePath validate issue.\r\n */\r\n\r\n\r\nfunction _validateRule() {\r\n  _validateRule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name, value, rule, options, messageVariables) {\r\n    var cloneRule, originValidator, subRuleField, validator, messages, result, subResults, kv, fillVariableResult;\r\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\r\n      while (1) {\r\n        switch (_context2.prev = _context2.next) {\r\n          case 0:\r\n            cloneRule = _objectSpread({}, rule); // Bug of `async-validator`\r\n            // https://github.com/react-component/field-form/issues/316\r\n            // https://github.com/react-component/field-form/issues/313\r\n\r\n            delete cloneRule.ruleIndex;\r\n\r\n            if (cloneRule.validator) {\r\n              originValidator = cloneRule.validator;\r\n\r\n              cloneRule.validator = function () {\r\n                try {\r\n                  return originValidator.apply(void 0, arguments);\r\n                } catch (error) {\r\n                  console.error(error);\r\n                  return Promise.reject(CODE_LOGIC_ERROR);\r\n                }\r\n              };\r\n            } // We should special handle array validate\r\n\r\n\r\n            subRuleField = null;\r\n\r\n            if (cloneRule && cloneRule.type === 'array' && cloneRule.defaultField) {\r\n              subRuleField = cloneRule.defaultField;\r\n              delete cloneRule.defaultField;\r\n            }\r\n\r\n            validator = new AsyncValidator(_defineProperty({}, name, [cloneRule]));\r\n            messages = setValues({}, defaultValidateMessages, options.validateMessages);\r\n            validator.messages(messages);\r\n            result = [];\r\n            _context2.prev = 9;\r\n            _context2.next = 12;\r\n            return Promise.resolve(validator.validate(_defineProperty({}, name, value), _objectSpread({}, options)));\r\n\r\n          case 12:\r\n            _context2.next = 17;\r\n            break;\r\n\r\n          case 14:\r\n            _context2.prev = 14;\r\n            _context2.t0 = _context2[\"catch\"](9);\r\n\r\n            if (_context2.t0.errors) {\r\n              result = _context2.t0.errors.map(function (_ref4, index) {\r\n                var message = _ref4.message;\r\n                var mergedMessage = message === CODE_LOGIC_ERROR ? messages.default : message;\r\n                return /*#__PURE__*/React.isValidElement(mergedMessage) ?\r\n                /*#__PURE__*/\r\n                // Wrap ReactNode with `key`\r\n                React.cloneElement(mergedMessage, {\r\n                  key: \"error_\".concat(index)\r\n                }) : mergedMessage;\r\n              });\r\n            }\r\n\r\n          case 17:\r\n            if (!(!result.length && subRuleField)) {\r\n              _context2.next = 22;\r\n              break;\r\n            }\r\n\r\n            _context2.next = 20;\r\n            return Promise.all(value.map(function (subValue, i) {\r\n              return validateRule(\"\".concat(name, \".\").concat(i), subValue, subRuleField, options, messageVariables);\r\n            }));\r\n\r\n          case 20:\r\n            subResults = _context2.sent;\r\n            return _context2.abrupt(\"return\", subResults.reduce(function (prev, errors) {\r\n              return [].concat(_toConsumableArray(prev), _toConsumableArray(errors));\r\n            }, []));\r\n\r\n          case 22:\r\n            // Replace message with variables\r\n            kv = _objectSpread(_objectSpread({}, rule), {}, {\r\n              name: name,\r\n              enum: (rule.enum || []).join(', ')\r\n            }, messageVariables);\r\n            fillVariableResult = result.map(function (error) {\r\n              if (typeof error === 'string') {\r\n                return replaceMessage(error, kv);\r\n              }\r\n\r\n              return error;\r\n            });\r\n            return _context2.abrupt(\"return\", fillVariableResult);\r\n\r\n          case 25:\r\n          case \"end\":\r\n            return _context2.stop();\r\n        }\r\n      }\r\n    }, _callee2, null, [[9, 14]]);\r\n  }));\r\n  return _validateRule.apply(this, arguments);\r\n}\r\n\r\nexport function validateRules(namePath, value, rules, options, validateFirst, messageVariables) {\r\n  var name = namePath.join('.'); // Fill rule with context\r\n\r\n  var filledRules = rules.map(function (currentRule, ruleIndex) {\r\n    var originValidatorFunc = currentRule.validator;\r\n\r\n    var cloneRule = _objectSpread(_objectSpread({}, currentRule), {}, {\r\n      ruleIndex: ruleIndex\r\n    }); // Replace validator if needed\r\n\r\n\r\n    if (originValidatorFunc) {\r\n      cloneRule.validator = function (rule, val, callback) {\r\n        var hasPromise = false; // Wrap callback only accept when promise not provided\r\n\r\n        var wrappedCallback = function wrappedCallback() {\r\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n            args[_key] = arguments[_key];\r\n          }\r\n\r\n          // Wait a tick to make sure return type is a promise\r\n          Promise.resolve().then(function () {\r\n            warning(!hasPromise, 'Your validator function has already return a promise. `callback` will be ignored.');\r\n\r\n            if (!hasPromise) {\r\n              callback.apply(void 0, args);\r\n            }\r\n          });\r\n        }; // Get promise\r\n\r\n\r\n        var promise = originValidatorFunc(rule, val, wrappedCallback);\r\n        hasPromise = promise && typeof promise.then === 'function' && typeof promise.catch === 'function';\r\n        /**\r\n         * 1. Use promise as the first priority.\r\n         * 2. If promise not exist, use callback with warning instead\r\n         */\r\n\r\n        warning(hasPromise, '`callback` is deprecated. Please return a promise instead.');\r\n\r\n        if (hasPromise) {\r\n          promise.then(function () {\r\n            callback();\r\n          }).catch(function (err) {\r\n            callback(err || ' ');\r\n          });\r\n        }\r\n      };\r\n    }\r\n\r\n    return cloneRule;\r\n  }).sort(function (_ref, _ref2) {\r\n    var w1 = _ref.warningOnly,\r\n        i1 = _ref.ruleIndex;\r\n    var w2 = _ref2.warningOnly,\r\n        i2 = _ref2.ruleIndex;\r\n\r\n    if (!!w1 === !!w2) {\r\n      // Let keep origin order\r\n      return i1 - i2;\r\n    }\r\n\r\n    if (w1) {\r\n      return 1;\r\n    }\r\n\r\n    return -1;\r\n  }); // Do validate rules\r\n\r\n  var summaryPromise;\r\n\r\n  if (validateFirst === true) {\r\n    // >>>>> Validate by serialization\r\n    summaryPromise = new Promise( /*#__PURE__*/function () {\r\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve, reject) {\r\n        var i, rule, errors;\r\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\r\n          while (1) {\r\n            switch (_context.prev = _context.next) {\r\n              case 0:\r\n                i = 0;\r\n\r\n              case 1:\r\n                if (!(i < filledRules.length)) {\r\n                  _context.next = 12;\r\n                  break;\r\n                }\r\n\r\n                rule = filledRules[i];\r\n                _context.next = 5;\r\n                return validateRule(name, value, rule, options, messageVariables);\r\n\r\n              case 5:\r\n                errors = _context.sent;\r\n\r\n                if (!errors.length) {\r\n                  _context.next = 9;\r\n                  break;\r\n                }\r\n\r\n                reject([{\r\n                  errors: errors,\r\n                  rule: rule\r\n                }]);\r\n                return _context.abrupt(\"return\");\r\n\r\n              case 9:\r\n                i += 1;\r\n                _context.next = 1;\r\n                break;\r\n\r\n              case 12:\r\n                /* eslint-enable */\r\n                resolve([]);\r\n\r\n              case 13:\r\n              case \"end\":\r\n                return _context.stop();\r\n            }\r\n          }\r\n        }, _callee);\r\n      }));\r\n\r\n      return function (_x6, _x7) {\r\n        return _ref3.apply(this, arguments);\r\n      };\r\n    }());\r\n  } else {\r\n    // >>>>> Validate by parallel\r\n    var rulePromises = filledRules.map(function (rule) {\r\n      return validateRule(name, value, rule, options, messageVariables).then(function (errors) {\r\n        return {\r\n          errors: errors,\r\n          rule: rule\r\n        };\r\n      });\r\n    });\r\n    summaryPromise = (validateFirst ? finishOnFirstFailed(rulePromises) : finishOnAllFailed(rulePromises)).then(function (errors) {\r\n      // Always change to rejection for Field to catch\r\n      return Promise.reject(errors);\r\n    });\r\n  } // Internal catch error to avoid console error log.\r\n\r\n\r\n  summaryPromise.catch(function (e) {\r\n    return e;\r\n  });\r\n  return summaryPromise;\r\n}\r\n\r\nfunction finishOnAllFailed(_x8) {\r\n  return _finishOnAllFailed.apply(this, arguments);\r\n}\r\n\r\nfunction _finishOnAllFailed() {\r\n  _finishOnAllFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(rulePromises) {\r\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\r\n      while (1) {\r\n        switch (_context3.prev = _context3.next) {\r\n          case 0:\r\n            return _context3.abrupt(\"return\", Promise.all(rulePromises).then(function (errorsList) {\r\n              var _ref5;\r\n\r\n              var errors = (_ref5 = []).concat.apply(_ref5, _toConsumableArray(errorsList));\r\n\r\n              return errors;\r\n            }));\r\n\r\n          case 1:\r\n          case \"end\":\r\n            return _context3.stop();\r\n        }\r\n      }\r\n    }, _callee3);\r\n  }));\r\n  return _finishOnAllFailed.apply(this, arguments);\r\n}\r\n\r\nfunction finishOnFirstFailed(_x9) {\r\n  return _finishOnFirstFailed.apply(this, arguments);\r\n}\r\n\r\nfunction _finishOnFirstFailed() {\r\n  _finishOnFirstFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(rulePromises) {\r\n    var count;\r\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\r\n      while (1) {\r\n        switch (_context4.prev = _context4.next) {\r\n          case 0:\r\n            count = 0;\r\n            return _context4.abrupt(\"return\", new Promise(function (resolve) {\r\n              rulePromises.forEach(function (promise) {\r\n                promise.then(function (ruleError) {\r\n                  if (ruleError.errors.length) {\r\n                    resolve([ruleError]);\r\n                  }\r\n\r\n                  count += 1;\r\n\r\n                  if (count === rulePromises.length) {\r\n                    resolve([]);\r\n                  }\r\n                });\r\n              });\r\n            }));\r\n\r\n          case 2:\r\n          case \"end\":\r\n            return _context4.stop();\r\n        }\r\n      }\r\n    }, _callee4);\r\n  }));\r\n  return _finishOnFirstFailed.apply(this, arguments);\r\n}"]},"metadata":{},"sourceType":"module"}